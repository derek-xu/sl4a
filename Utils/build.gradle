apply plugin: 'com.android.library'

android {
    compileSdkVersion 'android-O'
    buildToolsVersion "26.0.0 rc1"

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}


dependencies {
    compile 'com.google.guava:guava:18.0'
    provided fileTree(dir: 'systemlibraries', include: ['*.jar'])
}

task pushDownJdkDependency {
    def imlFile = file("Utils.iml")
    println 'Change Utils.iml order'
    try {
        def parsedXml = (new XmlParser()).parse(imlFile)
        def jdkNode = parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }
        parsedXml.component[1].remove(jdkNode)
        new Node(parsedXml.component[1], 'orderEntry', ['type': 'jdk', 'jdkName': "Android API 25, O preview Platform", 'jdkType': 'Android SDK'])
        def writer = new StringWriter()
        new XmlNodePrinter(new PrintWriter(writer)).print(parsedXml)
    } catch (FileNotFoundException e) {
        println e.getMessage()
    }
}

gradle.projectsEvaluated {
    preBuild.dependsOn(pushDownJdkDependency)
    tasks.withType(JavaCompile) {
        options.compilerArgs << '-Xbootclasspath/p:Utils/systemlibraries/framework.jar'
    }
}